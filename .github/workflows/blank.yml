# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      SW_REPO: "soroushchehresa/unsplash-wallpapers"
      CURL_FLAG: "-sL"
      POST_URL: "/releases/latest"
      PRE_URL: "/repos/"
      SW_URL: "${GITHUB_API_URL}${PRE_URL}${SW_REPO}${POST_URL}"
    outputs:
      newpkg: ${{ steps.parseURLs.outputs.modified }} # map step output to job output
      url: ${{ steps.parseURLs.outputs.URL }}
      version: ${{ steps.parseURLs.outputs.TAG }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Fetch SW Release Version
        id: fetchSwVer
        run: |
          latestContent=`curl ${{env.CURL_FLAG}} ${{env.SW_URL}}`
          # curl -sL https://api.github.com/repos/chris2511/xca/releases/latest > xca-release.json
          # Prep multiline json
          latestContent="${latestContent//'%'/'%25'}"
          latestContent="${latestContent//$'\n'/'%0A'}"
          latestContent="${latestContent//$'\r'/'%0D'}"
          # end of optional handling for multi line json
          echo "::set-output name=currentResponse::${latestContent}"
      - name: Parse Curl Response
        id: parseURLs
        run: |
          LTAG=${{fromJson(steps.fetchSwVer.outputs.currentResponse).tag_name}}
          ASSET_NAMES=${{fromJson(steps.fetchSwVer.outputs.currentResponse).assets.*.name}}
          echo "Latest Release: ${LTAG}"
          echo "With assets: ${{join(${ASSET_NAMES})}}"
